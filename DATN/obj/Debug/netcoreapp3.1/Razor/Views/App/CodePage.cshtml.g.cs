#pragma checksum "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "59e72720c7afc2518b6a38ecd33b9dd91959e99c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_App_CodePage), @"mvc.1.0.view", @"/Views/App/CodePage.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\_ViewImports.cshtml"
using DATN;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\_ViewImports.cshtml"
using DATN.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"59e72720c7afc2518b6a38ecd33b9dd91959e99c", @"/Views/App/CodePage.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9537ef48c69d90f04cb6e7793df4de3640a38013", @"/Views/_ViewImports.cshtml")]
    public class Views_App_CodePage : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DATN.Models.Exercise>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "ace/keyboard/vim", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "ace/keyboard/emacs", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "ace/keyboard/vscode", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "ace/keyboard/sublime", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("cExer-code-side"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "App", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "CodePage", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/ace-builds-master/src-noconflict/ace.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("charset", new global::Microsoft.AspNetCore.Html.HtmlString("utf-8"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
  
    ViewData["Title"] = "CodePage";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<TestCase> lstestCases = ViewBag.testCase;
    List<Tuple<string, string>> resTestCase = ViewBag.resTestCase;
    var numPubTest = 0;
    if (resTestCase != null)
    {
        numPubTest = resTestCase.Count;
    }
    var library = ViewBag.libraryLanguage;
    var listLibrary = library.Split("\n");
    var nameLanguage = ViewBag.nameLanguage;
    var versionLanguage = ViewBag.versionLanguage;
    var timeLimit = Double.Parse(Model.TimeLimit) / 1000;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""container--cExer flex1"">
    <div class=""cExer full-height"">
        <div class=""grid full-height"">
            <div class=""row no-gutters ful-width full-height"">
                <div class=""col c-4 layout-h full-height"">
                    <div class=""cExer-left-bar"">
                        <div id=""js-btn-des"" class=""cExer-left-bar__item"" onclick=""showDesExtra()"">
                            <div class=""cExer-left-bar__item--inside"">
                                <div class=""cExer-left-bar__item--img"">
                                    <svg xmlns=""http://www.w3.org/2000/svg"" viewBox=""0 0 24 24""><path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M14 2H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 10H8v2h8v-2zm0 4H8v2h8v-2zM6 20h12V9h-5V4H6v16z""></path></svg>
                                </div>
                            </div>
                        </div>
                        <div id=""js-btn-readme"" class=""cExer-left-bar__item"" onclick=""showReadmeE");
            WriteLiteral(@"xtra()"">
                            <div class=""cExer-left-bar__item--inside"">
                                <div class=""cExer-left-bar__item--img"">
                                    <i class=""fa-brands fa-readme"" style=""font-size: 1.6rem;""></i>
                                </div>
                            </div>
                        </div>
                        <div id=""js-btn-set"" class=""cExer-left-bar__item"" onclick=""showSetExtra()"">
                            <div class=""cExer-left-bar__item--inside"">
                                <div class=""cExer-left-bar__item--img"">
                                    <svg width=""24"" height=""24"" viewBox=""0 0 24 24""><path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M19.5 12v1l2 1.6c.2.2.3.5.2.7l-2 3.4a.6.6 0 01-.6.2l-2.5-1c-.6.4-1.1.8-1.7 1l-.4 2.7c0 .2-.2.4-.5.4h-4a.5.5 0 01-.5-.4l-.4-2.7c-.6-.2-1.1-.5-1.7-1L5 19h-.2c-.2 0-.4 0-.5-.2l-2-3.4c0-.3 0-.5.2-.7l2-1.6a8 8 0 010-2l-2-1.6a.5.5 0 01-.2-.7l2-3.4A.6.6 0 015 5l2.5 1c.6-.4 1.1-.8 1.7-1l.4");
            WriteLiteral(@"-2.7c0-.2.3-.4.5-.4h4c.3 0 .5.2.5.4l.4 2.7c.6.2 1.1.6 1.7 1L19 5h.1c.2 0 .4 0 .5.2l2 3.4c0 .3 0 .5-.2.7l-2 1.6v1zm-2 0v-.7l-.2-1.2.9-.7 1-.8-.6-1.2-1.3.5-1 .4-1-.7-1.2-.7-1-.4-.2-1.2-.2-1.3h-1.4l-.2 1.3-.2 1.2-1 .4-1.3.7-.9.7-1-.4-1.3-.5-.7 1.2 1.1.8.9.7-.1 1.2a7.6 7.6 0 000 1.4V14l-.8.7-1 .8.6 1.2 1.3-.5 1-.4 1 .7 1.2.7 1 .4.2 1.1.2 1.4h1.4l.2-1.4.2-1 1-.5 1.3-.7.9-.7 1 .4 1.3.5.7-1.2-1.1-.8-.9-.7.2-1.2V12zM12 8a4 4 0 100 8 4 4 0 000-8zm-2 4c0 1.1.9 2 2 2a2 2 0 002-2 2 2 0 00-2-2 2 2 0 00-2 2z""></path></svg>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class=""cExer-task full-height"">
                        <div class=""cExer-task-panel"">
                            <div class=""cExer-task__inside js-question-ex"">
                                <div class=""cExer-task__header"">
                                    <div class=""cExer-task__header--item"">
                                   ");
            WriteLiteral(@"     <div class=""cExer-task__header--icon"">
                                            <svg width=""16"" height=""16"" viewBox=""0 0 16 16""><path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm-1.43-3c-1.642-.344-2.462-1.136-2.462-2.376V9.612c0-.688-.37-1.032-1.108-1.032V7.42c.739 0 1.108-.346 1.108-1.037V5.31c.013-.613.225-1.11.636-1.487.414-.378 1.023-.653 1.825-.823L7 3.9c-.574.163-.873.621-.896 1.374v1.109c0 .763-.421 1.301-1.265 1.615.844.313 1.265.853 1.265 1.62v1.103c.023.753.322 1.211.896 1.374L6.57 13zm2.86 0c1.642-.344 2.462-1.136 2.462-2.376V9.612c0-.688.37-1.032 1.108-1.032V7.42c-.739 0-1.108-.346-1.108-1.037V5.31c-.013-.613-.225-1.11-.636-1.487-.414-.378-1.023-.653-1.825-.823L9 3.9c.574.163.873.621.896 1.374v1.109c0 .763.421 1.301 1.265 1.615-.844.313-1.265.853-1.265 1.62v1.103c-.023.753-.322 1.211-.896 1.374l.43.905z""></path></svg>
                                        </div>
                                        <p class=""cExer-task__header--title"">Codewriting");
            WriteLiteral(@"</p>
                                    </div>
                                    <div class=""cExer-task__header--item mgl-16"">
                                        <div class=""cExer-task__header--icon"">
                                            <svg width=""16"" height=""16"" viewBox=""0 0 16 16""><path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm-1.43-3c-1.642-.344-2.462-1.136-2.462-2.376V9.612c0-.688-.37-1.032-1.108-1.032V7.42c.739 0 1.108-.346 1.108-1.037V5.31c.013-.613.225-1.11.636-1.487.414-.378 1.023-.653 1.825-.823L7 3.9c-.574.163-.873.621-.896 1.374v1.109c0 .763-.421 1.301-1.265 1.615.844.313 1.265.853 1.265 1.62v1.103c.023.753.322 1.211.896 1.374L6.57 13zm2.86 0c1.642-.344 2.462-1.136 2.462-2.376V9.612c0-.688.37-1.032 1.108-1.032V7.42c-.739 0-1.108-.346-1.108-1.037V5.31c-.013-.613-.225-1.11-.636-1.487-.414-.378-1.023-.653-1.825-.823L9 3.9c.574.163.873.621.896 1.374v1.109c0 .763.421 1.301 1.265 1.615-.844.313-1.265.853-1.265 1.62v1.103c-.023.753-.322 1.211-.896");
            WriteLiteral(@" 1.374l.43.905z""></path></svg>
                                        </div>
                                        <p class=""cExer-task__header--title"">300</p>
                                    </div>
                                </div>
                                <div class=""cExer-task__body"">
                                    <p>");
#nullable restore
#line 68 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                  Write(Model.Description);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n                                    <p><span class=\"markdown--header\" style=\"color:#2b3b52;font-size:1.4em\">Example</span></p>\r\n                                    <p>\r\n                                        ");
#nullable restore
#line 71 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                   Write(Model.Example);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                                    </p>
                                    <p><span class=""markdown--header"" style=""color:#2b3b52;font-size:1.4em"">Input/Output</span></p>
                                    <ul>
                                        <li>
                                            <p><strong>[Thời gian giới hạn] (");
#nullable restore
#line 76 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                        Write(timeLimit);

#line default
#line hidden
#nullable disable
            WriteLiteral(@") seconds (c)</strong></p>
                                        </li>
                                        <li>
                                            <p><strong>[input] </strong></p>
                                            <p>
                                                <em>Điều kiện đầu vào:</em><br>
                                                <code>");
#nullable restore
#line 82 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                 Write(Model.Input);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</code>
                                            </p>
                                        </li>
   
                                        <li>
                                            <p><strong>[output] </strong></p>
                                            <p>");
#nullable restore
#line 88 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                          Write(Model.Output);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</p>
                                </div>
                            </div>
                            <div class=""cExer-task__inside js-readme close"">
                                <div class=""cExer-task__header"" style=""display: flex; flex-direction:column;"">
                                    <h1>Ngôn ngữ :<span id=""nameLanguage"">");
#nullable restore
#line 93 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                     Write(nameLanguage);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span> </h1>\r\n                                    <p>Phiên bản : <span id=\"versionLanguage\">");
#nullable restore
#line 94 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                         Write(versionLanguage);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span></p>\r\n                                </div>\r\n                                <div class=\"cExer-task__body\">\r\n                                    <h2>Thư viện sử dụng</h2>\r\n                                    <div id=\"lsLibrary\">\r\n");
#nullable restore
#line 99 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                         if (listLibrary != null)
                                        {
                                            foreach (var item in listLibrary)
                                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                <code style=\"margin:0; padding:0; font-size: 1.4rem;\">\r\n                                                    ");
#nullable restore
#line 104 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                               Write(item);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                                </code>\r\n");
#nullable restore
#line 106 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                            }
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                    </div>
                                    
                                </div>
                            </div>
                            <div class=""cExer-task__inside js-setting-ex close"">
                                <h1 class=""cExer-task__setting--title"">
                                    Setting
                                </h1>
                                <div class=""cExer-setting__list"">
                                    <h4 class=""cExer-setting__list--title"">Fomartting</h4>
                                    <div class=""cExer-setting__item"">
                                        <div class=""cExer-setting__item-name"">Editor Mode</div>
                                        <div class=""cExer-setting__select-mode"">
                                            <select id=""edit_mode"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "59e72720c7afc2518b6a38ecd33b9dd91959e99c19934", async() => {
                WriteLiteral("VIM");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "59e72720c7afc2518b6a38ecd33b9dd91959e99c21139", async() => {
                WriteLiteral("Emacs ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "59e72720c7afc2518b6a38ecd33b9dd91959e99c22347", async() => {
                WriteLiteral("VS Code");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "59e72720c7afc2518b6a38ecd33b9dd91959e99c23556", async() => {
                WriteLiteral("Sublime");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

                                            </select>

                                        </div>
                                    </div>
                                    <div class=""cExer-setting__item"">
                                        <div class=""cExer-setting__item-name"">Theme</div>
                                        <div class=""cExer-setting__select-mode"">
                                            <select id=""edit_theme"">
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""cExer-setting__item"">
                                        <div class=""cExer-setting__item-name"">FontSize</div>
                                        <div class=""cExer-setting__select-mode"">
                                            <select id=""edit_font"">
                                            </select>
                                       ");
            WriteLiteral(@" </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""col flex1 layout-v"">
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "59e72720c7afc2518b6a38ecd33b9dd91959e99c26071", async() => {
                WriteLiteral("\r\n                        <input type=\"hidden\" name=\"exerciseId\" id=\"exerciseId\"");
                BeginWriteAttribute("value", " value=\"", 11369, "\"", 11395, 1);
#nullable restore
#line 152 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
WriteAttributeValue("", 11377, Model.ExcerciseId, 11377, 18, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" />
                        <input type=""hidden"" name=""languageMode"" id=""languageMode"" />
                        <div class=""cExer-code-side"">
                            <div class=""cExer-code-editor"">
                                <div class=""cExer-code_language"">
                                    <div class=""cExer-code__label"">Chọn ngôn ngữ</div>
                                    <select");
                BeginWriteAttribute("name", " name=\"", 11802, "\"", 11809, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""edit_language"">
                                    </select>
                                </div>
                                <pre id=""editor"" style=""width: 100%;""></pre>
                                <textarea name = ""codeSubmit"" id =""codeSubmit"" class=""cExer-code-editor__input"" cols=""30"" rows=""10"" style=""display: none;"">");
#nullable restore
#line 162 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                                                                                                      Write(ViewBag.CodeSub);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</textarea>
                            </div>
                            <div class=""cExer-code-side__infor"">
                                <div class=""cExer-code-side__content"">
                                    <div class=""cExer-code-side__tablist"">
                                        <div class=""cExer-code-side__tabwrapper"">
                                            <div class=""cExer-code-side__tab--test"">
                                                <div class=""cExer-code-side__tab--text"">
                                                    TEST
                                                </div>
                                            </div>
                                            <div class=""cExer-code-side__btn-side"">
                                                <div class=""cExer-code-side__btn-wrap"">
                                                    <button type=""submit"" id=""runtest_btn"" class=""cExer-code__run-btn"">
                                         ");
                WriteLiteral(@"               <div class=""cExer-code__btn-inside"">
                                                            <div class=""cExer-code__btn-icon"">
                                                                <svg viewBox=""0 0 24 24""><path d=""M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm4-8l-6 4.5v-9l6 4.5z""></path></svg>
                                                            </div>
                                                            <span>Run tests</span>
                                                        </div>
                                                    </button>
                                                    <button type=""submit"" id=""submit_btn"" class=""cExer-code__submit-btn"">
                                                        <div class=""cExer-code__btn-inside"">
                                                            <div class=""cExer-code__btn-icon"">
                       ");
                WriteLiteral(@"                                         <svg viewBox=""0 0 24 24""><path d=""M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm4-8l-6 4.5v-9l6 4.5z""></path></svg>
                                                            </div>
                                                            <span>SUBMIT</span>
                                                        </div>
                                                    </button>
                                                </div>
                                            </div>
                                            <input type=""hidden"" name=""inputSubmit"" id=""inputSubmit"" />
                                        </div>

                                    </div>

");
#nullable restore
#line 198 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                     if (ViewData["numRight"] != null)
                                    {
                                        if (ViewData["numRight"] == "Failed all test")
                                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                            <span class=\"cExer-code-side__result\" style=\"color:red;\">");
#nullable restore
#line 202 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                                                Write(ViewBag.numRight);

#line default
#line hidden
#nullable disable
                WriteLiteral(" test</span>\r\n");
#nullable restore
#line 203 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                        }
                                        else
                                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                            <span class=\"cExer-code-side__result\">Trả lới đúng : ");
#nullable restore
#line 206 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                                            Write(ViewBag.numRight);

#line default
#line hidden
#nullable disable
                WriteLiteral(" test</span>\r\n");
#nullable restore
#line 207 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                        }
                                    }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                    <div class=\"cExer-code-side__testcase\">\r\n                                        <div class=\"cExer-code-side__testcase-inside\">\r\n");
#nullable restore
#line 212 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                             if (ViewData["testCase"] != null)
                                            {
                                                var num = 1;
                                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 215 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                 foreach (var item in lstestCases)
                                                {
                                                    if (item.Status == false)
                                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                                        <div class=""cExer-code-side__test-item"">
                                                            <div class=""cExer-code-side__test-title"">
                                                                <div class=""cExer-code-side__test-icon"">
                                                                    <svg width=""24"" height=""24"" viewBox=""0 0 24 24""><path d=""M.44 6.22L12 17.78 23.56 6.22H.44z""></path></svg>
                                                                </div>
                                                                <div class=""cExer-code-side__test-infor"">
                                                                    Test ");
#nullable restore
#line 225 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                    Write(num);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                                                    <div class=\"cExer-code-side__test-beauti\">\r\n");
#nullable restore
#line 227 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                         if (resTestCase != null)
                                                                        {
                                                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 229 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                             if ((num - 1) < numPubTest)
                                                                            {
                                                                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 231 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                                 if (resTestCase[num - 1].Item2 == "true")
                                                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                                                    <i class=\"fa-solid fa-circle-check testcase-icon testcase-icon--success\"></i>\r\n");
#nullable restore
#line 234 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                                }
                                                                                else
                                                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                                                    <i class=\"fa-solid fa-triangle-exclamation testcase-icon testcase-icon--false\"></i>\r\n");
#nullable restore
#line 238 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 238 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                                 
                                                                            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 239 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                             
                                                                        }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                                                        <div class=""cExer-code-side__test-beauti-icon"">
                                                                            <svg viewBox=""0 0 24 24""><path d=""M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm4-8l-6 4.5v-9l6 4.5z""></path></svg>

                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class=""cExer-code-side__test-content"">
                                                                <div class=""cExer-code-side__test-labels"">Đầu vào: </div>
                                                                <div class=""cExer-code-side__test-value"">");
                WriteLiteral("\r\n                                                                    ");
#nullable restore
#line 251 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                               Write(item.Input);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                                </div>
                                                            </div>
                                                            <div class=""cExer-code-side__test-content"">
                                                                <div class=""cExer-code-side__test-labels"">Đầu ra: </div>
                                                                <div class=""cExer-code-side__test-value"">
                                                                    ");
#nullable restore
#line 257 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                               Write(item.Output);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                                                </div>\r\n                                                            </div>\r\n");
#nullable restore
#line 260 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                             if (resTestCase != null)
                                                            {
                                                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 262 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                 if (num-1 < numPubTest)
                                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                                                    <div class=""cExer-code-side__test-content"">
                                                                        <div class=""cExer-code-side__test-labels"">Trả lời: </div>
                                                                        <div class=""cExer-code-side__test-value"">
                                                                            ");
#nullable restore
#line 267 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                       Write(resTestCase[num-1].Item1);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                                                        </div>\r\n                                                                    </div>\r\n");
#nullable restore
#line 270 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 270 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                 
                                                            }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                                        </div>\r\n");
#nullable restore
#line 274 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                    }
                                                    else
                                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                                        <div class=""cExer-code-side__test-item"">
                                                            <div class=""cExer-code-side__test-title"">
                                                                <div class=""cExer-code-side__test-icon"" style=""transform: rotate(-90deg);"">
                                                                    <svg width=""24"" height=""24"" viewBox=""0 0 24 24""><path d=""M.44 6.22L12 17.78 23.56 6.22H.44z""></path></svg>
                                                                </div>
                                                                <div class=""cExer-code-side__test-infor"">
                                                                    Test ");
#nullable restore
#line 283 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                                    Write(num);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                                    <div class=""cExer-code-side__test-beauti"">
                                                                        <div class=""cExer-code-side__test-beauti-icon"">
                                                                            <svg viewBox=""0 0 24 24""><path d=""M18.81 8.018h-1.135V5.742c0-3.14-2.542-5.69-5.675-5.69s-5.675 2.55-5.675 5.69v2.276H5.19a2.272 2.272 0 0 0-2.27 2.275v11.379a2.272 2.272 0 0 0 2.27 2.275h13.62a2.272 2.272 0 0 0 2.27-2.275V10.293a2.272 2.272 0 0 0-2.27-2.275zM12 18.258a2.272 2.272 0 0 1-2.27-2.276A2.272 2.272 0 0 1 12 13.707a2.272 2.272 0 0 1 2.27 2.275A2.272 2.272 0 0 1 12 18.258zm3.518-10.24H8.482V5.742A3.526 3.526 0 0 1 12 2.215a3.526 3.526 0 0 1 3.519 3.527v2.276z""></path></svg>
                                                                        </div>
                                                                    </div>
                                                                </di");
                WriteLiteral("v>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n");
#nullable restore
#line 293 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                    }
                                                    num++;
                                                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 295 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                                                 
                                            }

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                </div>
            </div>
        </div>
    </div>
</div>
    </div>
<script>
    const extra_des = document.querySelector('.js-question-ex');
    const extra_set = document.querySelector('.js-setting-ex');
    const extra_readme = document.querySelector('.js-readme');
    var btn_set = document.getElementById('js-btn-set');
    var btn_des = document.getElementById('js-btn-des');
    var btn_readme = document.getElementById('js-btn-readme');

    function showDesExtra() {
        extra_set.classList.add('close');
        extra_readme.classList.add('close');
        extra_des.classList.remove('close');
        btn_des.style.backgroundColor = ""#004ae1"";
        btn_readme.style.backgroundColor = ""#1d2631"";
        btn_set.style.backgroundColor = ""#1d2631"";
    }
    function showReadmeExtra() {
        extra_des.classList.add('close');
        extra_set.classList.add('close');
        extra_readme.classList.remove('close');
        btn_des.style.backgroundColor = ""#");
            WriteLiteral(@"1d2631"";
        btn_set.style.backgroundColor = ""#1d2631"";
        btn_readme.style.backgroundColor = ""#004ae1"";
    }
    function showSetExtra() {
        extra_des.classList.add('close');
        extra_readme.classList.add('close');
        extra_set.classList.remove('close');
        btn_des.style.backgroundColor = ""#1d2631"";
        btn_readme.style.backgroundColor = ""#1d2631"";
        btn_set.style.backgroundColor = ""#004ae1"";
    }
</script>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "59e72720c7afc2518b6a38ecd33b9dd91959e99c49732", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    var themeData = [
        [""Chrome""],
        [""Clouds""],
        [""Crimson Editor""],
        [""Dawn""],
        [""Dreamweaver""],
        [""Eclipse""],
        [""GitHub""],
        [""IPlastic""],
        [""Solarized Light""],
        [""TextMate""],
        [""Tomorrow""],
        [""XCode""],
        [""Kuroir""],
        [""KatzenMilch""],
        [""SQL Server"", ""sqlserver"", ""light""],
        [""Ambiance"", ""ambiance"", ""dark""],
        [""Chaos"", ""chaos"", ""dark""],
        [""Clouds Midnight"", ""clouds_midnight"", ""dark""],
        [""Dracula"", ""dracula"", ""dark""],
        [""Cobalt"", ""cobalt"", ""dark""],
        [""Gruvbox"", ""gruvbox"", ""dark""],
        [""Green on Black"", ""gob"", ""dark""],
        [""idle Fingers"", ""idle_fingers"", ""dark""],
        [""krTheme"", ""kr_theme"", ""dark""],
        [""Merbivore"", ""merbivore"", ""dark""],
        [""Merbivore Soft"", ""merbivore_soft"", ""dark""],
        [""Mono Industrial"", ""mono_industrial"", ""dark""],
        [""Monokai"", ""monokai"", ""dark""],
        [""Nord Dark"", ""n");
            WriteLiteral(@"ord_dark"", ""dark""],
        [""One Dark"", ""one_dark"", ""dark""],
        [""Pastel on dark"", ""pastel_on_dark"", ""dark""],
        [""Solarized Dark"", ""solarized_dark"", ""dark""],
        [""Terminal"", ""terminal"", ""dark""],
        [""Tomorrow Night"", ""tomorrow_night"", ""dark""],
        [""Tomorrow Night Blue"", ""tomorrow_night_blue"", ""dark""],
        [""Tomorrow Night Bright"", ""tomorrow_night_bright"", ""dark""],
        [""Tomorrow Night 80s"", ""tomorrow_night_eighties"", ""dark""],
        [""Twilight"", ""twilight"", ""dark""],
        [""Vibrant Ink"", ""vibrant_ink"", ""dark""]
    ];
    for (var i = 0; i < themeData.length; i++) {
        var x = document.getElementById('edit_theme');
        var value = value ? themeData[i][1] : themeData[i][0];
        var option = new Option(themeData[i][0], value);
        x.appendChild(option);
    }



    var fontData = [
        [""14""],
        [""16""],
        [""18""],
        [""20""],
        [""22""],
        [""24""],
    ];
    var x = document.getElementById('edit_font");
            WriteLiteral("\');\r\n    for (var i = 0; i < fontData.length; i++) {\r\n        var option = new Option(fontData[i][0], fontData[i][0]);\r\n        x.appendChild(option);\r\n    }\r\n    var modeData = JSON.parse(\'");
#nullable restore
#line 407 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                          Write(Html.Raw(Json.Serialize(ViewData["modeData"])));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"');
    for (var key in modeData) {
        var x = document.getElementById('edit_language');
        var option = new Option(key, modeData[key]);
        x.appendChild(option);
    }

    for (var i = 0; i < modeData.length; i++) {
        var x = document.getElementById('edit_language');
        var option = new Option(modeData[i][0], modeData[i][1]);
        x.appendChild(option);
    }

</script>
<script>
    var editor = ace.edit(""editor"");
    var textarea = ('textarea[name=""codeSubmit""]');
    var defaultMode = JSON.parse('");
#nullable restore
#line 424 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                             Write(Html.Raw(Json.Serialize(ViewData["DefaultMode"])));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"');
    if (defaultMode != """") {
        editor.session.setMode(""ace/mode/"" + defaultMode);
        document.getElementById('edit_language').value = defaultMode;
    }

    document.getElementById('languageMode').value = document.getElementById('edit_language').value;
    document.getElementById('edit_theme').value = ""dracula"";
    editor.setTheme(""ace/theme/dracula"");


    document.getElementById('edit_theme').addEventListener('change', function () {
        var nameTheme = this.value;
        nameTheme = nameTheme.replace(/ /g, ""_"").toLowerCase();
        var theme = ""ace/theme/"" + nameTheme;
        console.log(nameTheme);
        editor.setTheme(theme);

    })

    document.getElementById('edit_font').addEventListener('change', function () {
        editor.setFontSize(parseInt(this.value))
    })

    document.getElementById('edit_mode').addEventListener('change', function () {
        editor.setKeyboardHandler(this.value)
        console.log('ace/keyboard/' + this.value)
    ");
            WriteLiteral(@"})

    document.getElementById('edit_language').addEventListener('change', function () {
        var namelanguage = this.value;
        namelanguage = namelanguage.replace(/ /g, ""_"").toLowerCase();
        var language = ""ace/mode/"" + namelanguage;
        document.getElementById('languageMode').value = namelanguage;
        editor.session.setMode(language);
    })

    var codeSub = document.getElementById(""codeSubmit"");
    editor.setValue(codeSub.value, 1);


    // Gửi dữ liệu
    document.getElementById(""submit_btn"").addEventListener(""click"", function (event) {
        event.preventDefault();
        var codeSend = editor.getValue();
        document.getElementById(""codeSubmit"").value = codeSend;
        document.getElementById(""inputSubmit"").value = ""submit"";
        document.getElementById(""form"").submit();
    });

    document.getElementById(""runtest_btn"").addEventListener(""click"", function (event) {
        event.preventDefault();
        var codeSend = editor.getValue();
");
            WriteLiteral("        document.getElementById(\"codeSubmit\").value = codeSend;\r\n        document.getElementById(\"inputSubmit\").value = \"runtest\";\r\n        document.getElementById(\"form\").submit();;\r\n    });\r\n</script>\r\n\r\n");
            WriteLiteral("\r\n\r\n<script>\r\n    $(document).ready(function () {\r\n        jQuery(\'#edit_language\').change(function () {\r\n            var languageMode = $(\"#edit_language option:selected\").val();\r\n            var id = ");
#nullable restore
#line 490 "D:\End-term\Đồ án\Hệ thống học lập trình online\DATN\DATN\Views\App\CodePage.cshtml"
                Write(Html.Raw(Json.Serialize(Model.ExcerciseId)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
 
            $.ajax({
                url: '/App/GetCodeSubmit',
                datatype: ""json"",
                type: ""GET"",
                data: {
                    language: languageMode,
                    exerciseID: id
                },
                async: true,
                success: function (results) {
                    editor.session.setValue(results.codeSub, 1);
                    editor.session.setMode(results.modeEdit)
                    $('#nameLanguage').text(results.name);
                    $('#versionLanguage').text(results.version);
                    if (results.html != null) {
                        var str = '';
                        $.each(results.html, function (index, value) {
                            str += '<p>' + value.replace('<', ""'"").replace('>', ""'"") + '</p>';
                        });

                        $('#lsLibrary').html(str);
                        
                    }
                },
                error:");
            WriteLiteral(" function (xhr) {\r\n                    alert(\"error\");\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    });\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DATN.Models.Exercise> Html { get; private set; }
    }
}
#pragma warning restore 1591
